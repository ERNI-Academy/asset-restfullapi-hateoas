name: sonarcloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
        SONAR_TOKEN:
          required: true
  workflow_dispatch: ~
jobs:
  build:
    name: SonarCloud
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
         java-version: 1.11
         
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-coverage          
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"ERNI-Academy_asset-restfullapi-hateoas" /o:"erni-academy" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --configuration Release
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

        # shell: pwsh
        # run: |
          # .\.sonar\scanner\dotnet-sonarscanner begin /k:"erni-academy_asset-restfullapi-hateoas" /o:"erni-academy" /d:sonar.login="${{ secrets.sonar_token }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.dotnet.excludetestprojects="true" /d:sonar.cs.opencover.reportspaths="**\coverage.cobertura.xml" /d:sonar.cs.xunit.reportspaths=testresults/*.trx
          # dotnet restore
          # dotnet build
          # dotnet test --logger "trx;logfilename=unittests.trx" --results-directory testresults /p:collectcoverage=true /p:coverletoutputformat=cobertura /p:coverletoutput=testresults\coverage\ --collect:"xplat code coverage"
          # .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.sonar_token }}"
          